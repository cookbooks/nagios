define service {
  name                            default-service
  active_checks_enabled           1
  passive_checks_enabled          1
  parallelize_check               1
  obsess_over_service             1
  check_freshness                 0
  notifications_enabled           1
  event_handler_enabled           1
  flap_detection_enabled          1
  failure_prediction_enabled      1
  process_perf_data               1
  retain_status_information       1
  retain_nonstatus_information    1
  is_volatile                     0
  check_period                    24x7
  max_check_attempts              <%= nagios_attr(:default_service)[:max_check_attempts] %>
  check_interval                  <%= nagios_interval(nagios_attr(:default_service)[:check_interval]) %>
  retry_interval                  <%= nagios_interval(nagios_attr(:default_service)[:retry_interval]) %>
  contact_groups                  <%= nagios_attr(:default_contact_groups).join(",") %>
  notification_options            w,u,c,r
  notification_interval           <%= nagios_interval(nagios_attr(:default_service)[:notification_interval]) %>
  notification_period             24x7
  register                        0
}

<% @service_templates.reject { |k,v| k == 'id' }.each do |name, params| %>
define service {
  register  0
  <% params.reject { |k,v| k == 'template_type' }.each do |n, v| %>
  <%= n %>  <%= v %>
  <% end %>
}
<% end %>

define service {
  use default-service
  host_name *
  service_description ping
  check_command check_ping!100.0,20%!500.0,60%
}

define service {
  use                     default-service
  hostgroup_name          servers
  service_description     Free Space All Disks
  check_command           check_all_disks
}

define service {
  use                     default-service
  hostgroup_name          servers
  service_description     Load Average
  check_command           check_load
}

define service{
  use                     default-service
  hostgroup_name          servers
  service_description     Free Memory
  check_command           check_mem
}

define service{
  use                     default-service
  hostgroup_name          dell
  service_description     Dell Hardware Status
  check_command           check_nrpe!check_openmanage
}

define service {
  register  0
  name                    check-jabber
  use                     default-service
  service_description     jabber status
  check_command           check_tcp!5223
}

define service {
  register  0
  name                    check-vnc
  use                     default-service
  service_description     vnc status
  check_command           check_tcp!5900
}

# Fortigate Checks

<% @fortigate_firewalls.each do |firewall| %>
  define service{
    use                     default-service
    host_name               <%= firewall['fqdn'] %>
    service_description     Fortigate Firewall CPU
    check_command           check_fortigate_cpu!<%= @community %>!60!80
  }

  define service{
    use                     default-service
    host_name               <%= firewall['fqdn'] %>
    service_description     Fortigate Firewall Memory
    check_command           check_fortigate_memory!<%= @community %>!60!80
  }
    <% firewall['active_ports'].each do |port| %>
    
      define service {
        use                     default-service
        host_name               <%= firewall['fqdn'] %>
        service_description     Fortigate Firewall Port <%= port %> Status
        check_command           check_fortigate_port!<%= @community %>!<%= port %>
      }
    <% end %>
<% end %>

# Cisco Checks

<% @cisco_switches.each do |switch| %>
  define service {
    use                     default-service
    host_name               <%= switch['fqdn'] %>
    service_description     Cisco Stack Status
    check_command           check_cisco_stack!<%= @community %>
  }
  
  define service{
    use                     default-service
    host_name               <%= switch['fqdn'] %>
    service_description     Cisco Switch CPU 5 min
    check_command           check_cisco_cpu!<%= @community %>!1.3.6.1.4.1.9.2.1.58.0!60!80
  }
  
  define service{
    use                     default-service
    host_name               <%= switch['fqdn'] %>
    service_description     Cisco Switch CPU 1 min
    check_command           check_cisco_cpu!<%= @community %>!1.3.6.1.4.1.9.2.1.57.0!60!80
  }
  
  define service{
    use                     default-service
    host_name               <%= switch['fqdn'] %>
    service_description     Cisco Switch CPU 5 sec
    check_command           check_cisco_cpu!<%= @community %>!1.3.6.1.4.1.9.2.1.56.0!60!80
  }
    <% switch['active_ports'].each do |port| %>
    
      define service {
        use                     default-service
        host_name               <%= switch['fqdn'] %>
        service_description     Cisco <%= port %> Status
        check_command           check_cisco!<%= @community %>!<%= port %>
      }
    <% end %>
<% end %>

# APC PDU Checks

<% @apc_pdus.each do |pdu| %>
  define service{
    use                     default-service
    host_name               <%= pdu['fqdn'] %>
    service_description     APC PDU Load Total
    check_command           check_apc_load_total!<%= @community %>!180!240
  }
  
  define service{
    use                     default-service
    host_name               <%= pdu['fqdn'] %>
    service_description     APC PDU Load Bank 1
    check_command           check_apc_load_bank_1!<%= @community %>!120!150
  }
  
  define service{
    use                     default-service
    host_name               <%= pdu['fqdn'] %>
    service_description     APC PDU Load Bank 2
    check_command           check_apc_load_bank_2!<%= @community %>!120!150
  }
<% end %>

# Isilon Storage Checks

<% @isilon_storage_clusters.each do |isilon_storage_cluster| %>
  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_ONEFS_VERSION
      check_command       check_snmp! -o.1.3.6.1.2.1.1.1.0 -C <%= @community %>
  }

  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_NODE_ID
      check_command       check_snmp! -o.1.3.6.1.4.1.12124.2.1.1.0 -C <%= @community %>
  }

  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_CLSTR_NAME
      check_command       check_snmp! -o.1.3.6.1.4.1.12124.1.1.1.0 -C <%= @community %>
  }

  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_CONFIGURED_NODES
      check_command       check_snmp! -o.1.3.6.1.4.1.12124.1.1.5.0 -C <%= @community %>
  }

  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_ONLINE_NODES
      check_command       check_snmp! -o.1.3.6.1.4.1.12124.1.1.6.0 -C <%= @community %>
  }

  define service{
      use                 default-service
      host_name           <%= isilon_storage_cluster['fqdn'] %>
      service_description SNMP_CLUSTER_HEALTH
      check_command       check_snmp_cluster_health!<%= @community %>
  }
<% end %>

<% @devices.each do |device| %>
  <% if device['checks'] %>
    <% device['checks'].each do |key, check| %>
    define service{
        <% if check['enabled'] == false %>
        register  0
        <% end %>
        use                 <%= key %>
        host_name           <%= device['fqdn'] %>
    }
    <% end %>
  <% end %>
<% end %>

<% @nodes.each do |node| %>
  <% if node['nagios']['checks'] %>
    <% node['nagios']['checks'].each do |name, check| %>
    define service{
        <% if check['enabled'] == false %>
        register  0
        <% end %>
        use                 <%= check[:template] %>
        host_name           <%= node['fqdn'] %>
        <% if check[:description] %>
        service_description <%= check[:description] %>
        <% end %>
        <% if check[:command] %>
        check_command <%= check[:command] %>
        <% end %>
    }
    <% end %>
  <% end %>
<% end %>
